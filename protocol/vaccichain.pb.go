// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vaccichain.proto

package vaccichain

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BlocksRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlocksRequest) Reset()         { *m = BlocksRequest{} }
func (m *BlocksRequest) String() string { return proto.CompactTextString(m) }
func (*BlocksRequest) ProtoMessage()    {}
func (*BlocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{0}
}
func (m *BlocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlocksRequest.Unmarshal(m, b)
}
func (m *BlocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlocksRequest.Marshal(b, m, deterministic)
}
func (dst *BlocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlocksRequest.Merge(dst, src)
}
func (m *BlocksRequest) XXX_Size() int {
	return xxx_messageInfo_BlocksRequest.Size(m)
}
func (m *BlocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlocksRequest proto.InternalMessageInfo

type BlocksResponse struct {
	Blocks               []*BlockMessage `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BlocksResponse) Reset()         { *m = BlocksResponse{} }
func (m *BlocksResponse) String() string { return proto.CompactTextString(m) }
func (*BlocksResponse) ProtoMessage()    {}
func (*BlocksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{1}
}
func (m *BlocksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlocksResponse.Unmarshal(m, b)
}
func (m *BlocksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlocksResponse.Marshal(b, m, deterministic)
}
func (dst *BlocksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlocksResponse.Merge(dst, src)
}
func (m *BlocksResponse) XXX_Size() int {
	return xxx_messageInfo_BlocksResponse.Size(m)
}
func (m *BlocksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlocksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlocksResponse proto.InternalMessageInfo

func (m *BlocksResponse) GetBlocks() []*BlockMessage {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type GenesisBlockRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenesisBlockRequest) Reset()         { *m = GenesisBlockRequest{} }
func (m *GenesisBlockRequest) String() string { return proto.CompactTextString(m) }
func (*GenesisBlockRequest) ProtoMessage()    {}
func (*GenesisBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{2}
}
func (m *GenesisBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenesisBlockRequest.Unmarshal(m, b)
}
func (m *GenesisBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenesisBlockRequest.Marshal(b, m, deterministic)
}
func (dst *GenesisBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisBlockRequest.Merge(dst, src)
}
func (m *GenesisBlockRequest) XXX_Size() int {
	return xxx_messageInfo_GenesisBlockRequest.Size(m)
}
func (m *GenesisBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisBlockRequest proto.InternalMessageInfo

type GenesisBlockResponse struct {
	GenesisBlock         *BlockMessage `protobuf:"bytes,1,opt,name=genesisBlock,proto3" json:"genesisBlock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GenesisBlockResponse) Reset()         { *m = GenesisBlockResponse{} }
func (m *GenesisBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GenesisBlockResponse) ProtoMessage()    {}
func (*GenesisBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{3}
}
func (m *GenesisBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenesisBlockResponse.Unmarshal(m, b)
}
func (m *GenesisBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenesisBlockResponse.Marshal(b, m, deterministic)
}
func (dst *GenesisBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisBlockResponse.Merge(dst, src)
}
func (m *GenesisBlockResponse) XXX_Size() int {
	return xxx_messageInfo_GenesisBlockResponse.Size(m)
}
func (m *GenesisBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisBlockResponse proto.InternalMessageInfo

func (m *GenesisBlockResponse) GetGenesisBlock() *BlockMessage {
	if m != nil {
		return m.GenesisBlock
	}
	return nil
}

type LatestBlockRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatestBlockRequest) Reset()         { *m = LatestBlockRequest{} }
func (m *LatestBlockRequest) String() string { return proto.CompactTextString(m) }
func (*LatestBlockRequest) ProtoMessage()    {}
func (*LatestBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{4}
}
func (m *LatestBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatestBlockRequest.Unmarshal(m, b)
}
func (m *LatestBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatestBlockRequest.Marshal(b, m, deterministic)
}
func (dst *LatestBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatestBlockRequest.Merge(dst, src)
}
func (m *LatestBlockRequest) XXX_Size() int {
	return xxx_messageInfo_LatestBlockRequest.Size(m)
}
func (m *LatestBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LatestBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LatestBlockRequest proto.InternalMessageInfo

type LatestBlockResponse struct {
	LatestBlock          *BlockMessage `protobuf:"bytes,1,opt,name=latestBlock,proto3" json:"latestBlock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LatestBlockResponse) Reset()         { *m = LatestBlockResponse{} }
func (m *LatestBlockResponse) String() string { return proto.CompactTextString(m) }
func (*LatestBlockResponse) ProtoMessage()    {}
func (*LatestBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{5}
}
func (m *LatestBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatestBlockResponse.Unmarshal(m, b)
}
func (m *LatestBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatestBlockResponse.Marshal(b, m, deterministic)
}
func (dst *LatestBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatestBlockResponse.Merge(dst, src)
}
func (m *LatestBlockResponse) XXX_Size() int {
	return xxx_messageInfo_LatestBlockResponse.Size(m)
}
func (m *LatestBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LatestBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LatestBlockResponse proto.InternalMessageInfo

func (m *LatestBlockResponse) GetLatestBlock() *BlockMessage {
	if m != nil {
		return m.LatestBlock
	}
	return nil
}

type BlockCountRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockCountRequest) Reset()         { *m = BlockCountRequest{} }
func (m *BlockCountRequest) String() string { return proto.CompactTextString(m) }
func (*BlockCountRequest) ProtoMessage()    {}
func (*BlockCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{6}
}
func (m *BlockCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockCountRequest.Unmarshal(m, b)
}
func (m *BlockCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockCountRequest.Marshal(b, m, deterministic)
}
func (dst *BlockCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockCountRequest.Merge(dst, src)
}
func (m *BlockCountRequest) XXX_Size() int {
	return xxx_messageInfo_BlockCountRequest.Size(m)
}
func (m *BlockCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockCountRequest proto.InternalMessageInfo

type BlockCountResponse struct {
	BlockCount           int32    `protobuf:"varint,1,opt,name=blockCount,proto3" json:"blockCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockCountResponse) Reset()         { *m = BlockCountResponse{} }
func (m *BlockCountResponse) String() string { return proto.CompactTextString(m) }
func (*BlockCountResponse) ProtoMessage()    {}
func (*BlockCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{7}
}
func (m *BlockCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockCountResponse.Unmarshal(m, b)
}
func (m *BlockCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockCountResponse.Marshal(b, m, deterministic)
}
func (dst *BlockCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockCountResponse.Merge(dst, src)
}
func (m *BlockCountResponse) XXX_Size() int {
	return xxx_messageInfo_BlockCountResponse.Size(m)
}
func (m *BlockCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockCountResponse proto.InternalMessageInfo

func (m *BlockCountResponse) GetBlockCount() int32 {
	if m != nil {
		return m.BlockCount
	}
	return 0
}

type NewBlockRequest struct {
	NewBlock             *BlockMessage `protobuf:"bytes,1,opt,name=newBlock,proto3" json:"newBlock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NewBlockRequest) Reset()         { *m = NewBlockRequest{} }
func (m *NewBlockRequest) String() string { return proto.CompactTextString(m) }
func (*NewBlockRequest) ProtoMessage()    {}
func (*NewBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{8}
}
func (m *NewBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewBlockRequest.Unmarshal(m, b)
}
func (m *NewBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewBlockRequest.Marshal(b, m, deterministic)
}
func (dst *NewBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewBlockRequest.Merge(dst, src)
}
func (m *NewBlockRequest) XXX_Size() int {
	return xxx_messageInfo_NewBlockRequest.Size(m)
}
func (m *NewBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewBlockRequest proto.InternalMessageInfo

func (m *NewBlockRequest) GetNewBlock() *BlockMessage {
	if m != nil {
		return m.NewBlock
	}
	return nil
}

type NewBlockResponse struct {
	Accepted             bool     `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	RejectReason         string   `protobuf:"bytes,2,opt,name=rejectReason,proto3" json:"rejectReason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewBlockResponse) Reset()         { *m = NewBlockResponse{} }
func (m *NewBlockResponse) String() string { return proto.CompactTextString(m) }
func (*NewBlockResponse) ProtoMessage()    {}
func (*NewBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{9}
}
func (m *NewBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewBlockResponse.Unmarshal(m, b)
}
func (m *NewBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewBlockResponse.Marshal(b, m, deterministic)
}
func (dst *NewBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewBlockResponse.Merge(dst, src)
}
func (m *NewBlockResponse) XXX_Size() int {
	return xxx_messageInfo_NewBlockResponse.Size(m)
}
func (m *NewBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewBlockResponse proto.InternalMessageInfo

func (m *NewBlockResponse) GetAccepted() bool {
	if m != nil {
		return m.Accepted
	}
	return false
}

func (m *NewBlockResponse) GetRejectReason() string {
	if m != nil {
		return m.RejectReason
	}
	return ""
}

type BlockRequest struct {
	BlockIndex           int32    `protobuf:"varint,1,opt,name=blockIndex,proto3" json:"blockIndex,omitempty"`
	BlockHash            string   `protobuf:"bytes,2,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRequest) Reset()         { *m = BlockRequest{} }
func (m *BlockRequest) String() string { return proto.CompactTextString(m) }
func (*BlockRequest) ProtoMessage()    {}
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{10}
}
func (m *BlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest.Unmarshal(m, b)
}
func (m *BlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest.Marshal(b, m, deterministic)
}
func (dst *BlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest.Merge(dst, src)
}
func (m *BlockRequest) XXX_Size() int {
	return xxx_messageInfo_BlockRequest.Size(m)
}
func (m *BlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest proto.InternalMessageInfo

func (m *BlockRequest) GetBlockIndex() int32 {
	if m != nil {
		return m.BlockIndex
	}
	return 0
}

func (m *BlockRequest) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

type BlockResponse struct {
	Block                *BlockMessage `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BlockResponse) Reset()         { *m = BlockResponse{} }
func (m *BlockResponse) String() string { return proto.CompactTextString(m) }
func (*BlockResponse) ProtoMessage()    {}
func (*BlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{11}
}
func (m *BlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockResponse.Unmarshal(m, b)
}
func (m *BlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockResponse.Marshal(b, m, deterministic)
}
func (dst *BlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockResponse.Merge(dst, src)
}
func (m *BlockResponse) XXX_Size() int {
	return xxx_messageInfo_BlockResponse.Size(m)
}
func (m *BlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockResponse proto.InternalMessageInfo

func (m *BlockResponse) GetBlock() *BlockMessage {
	if m != nil {
		return m.Block
	}
	return nil
}

type BlockRangeRequest struct {
	GenesisBlockHash     string   `protobuf:"bytes,1,opt,name=genesisBlockHash,proto3" json:"genesisBlockHash,omitempty"`
	StartingIndex        int32    `protobuf:"varint,2,opt,name=startingIndex,proto3" json:"startingIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRangeRequest) Reset()         { *m = BlockRangeRequest{} }
func (m *BlockRangeRequest) String() string { return proto.CompactTextString(m) }
func (*BlockRangeRequest) ProtoMessage()    {}
func (*BlockRangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{12}
}
func (m *BlockRangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRangeRequest.Unmarshal(m, b)
}
func (m *BlockRangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRangeRequest.Marshal(b, m, deterministic)
}
func (dst *BlockRangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRangeRequest.Merge(dst, src)
}
func (m *BlockRangeRequest) XXX_Size() int {
	return xxx_messageInfo_BlockRangeRequest.Size(m)
}
func (m *BlockRangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRangeRequest proto.InternalMessageInfo

func (m *BlockRangeRequest) GetGenesisBlockHash() string {
	if m != nil {
		return m.GenesisBlockHash
	}
	return ""
}

func (m *BlockRangeRequest) GetStartingIndex() int32 {
	if m != nil {
		return m.StartingIndex
	}
	return 0
}

type BlockRangeResponse struct {
	Blocks               []*BlockMessage `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BlockRangeResponse) Reset()         { *m = BlockRangeResponse{} }
func (m *BlockRangeResponse) String() string { return proto.CompactTextString(m) }
func (*BlockRangeResponse) ProtoMessage()    {}
func (*BlockRangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{13}
}
func (m *BlockRangeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRangeResponse.Unmarshal(m, b)
}
func (m *BlockRangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRangeResponse.Marshal(b, m, deterministic)
}
func (dst *BlockRangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRangeResponse.Merge(dst, src)
}
func (m *BlockRangeResponse) XXX_Size() int {
	return xxx_messageInfo_BlockRangeResponse.Size(m)
}
func (m *BlockRangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRangeResponse proto.InternalMessageInfo

func (m *BlockRangeResponse) GetBlocks() []*BlockMessage {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type BlockMessage struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Timestamp            string   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Hash                 string   `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	PrevHash             string   `protobuf:"bytes,5,opt,name=prevHash,proto3" json:"prevHash,omitempty"`
	Difficulty           int32    `protobuf:"varint,6,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Nonce                string   `protobuf:"bytes,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockMessage) Reset()         { *m = BlockMessage{} }
func (m *BlockMessage) String() string { return proto.CompactTextString(m) }
func (*BlockMessage) ProtoMessage()    {}
func (*BlockMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_vaccichain_b259549167e87cea, []int{14}
}
func (m *BlockMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockMessage.Unmarshal(m, b)
}
func (m *BlockMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockMessage.Marshal(b, m, deterministic)
}
func (dst *BlockMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockMessage.Merge(dst, src)
}
func (m *BlockMessage) XXX_Size() int {
	return xxx_messageInfo_BlockMessage.Size(m)
}
func (m *BlockMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BlockMessage proto.InternalMessageInfo

func (m *BlockMessage) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *BlockMessage) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *BlockMessage) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *BlockMessage) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *BlockMessage) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *BlockMessage) GetDifficulty() int32 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

func (m *BlockMessage) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func init() {
	proto.RegisterType((*BlocksRequest)(nil), "vaccichain.BlocksRequest")
	proto.RegisterType((*BlocksResponse)(nil), "vaccichain.BlocksResponse")
	proto.RegisterType((*GenesisBlockRequest)(nil), "vaccichain.GenesisBlockRequest")
	proto.RegisterType((*GenesisBlockResponse)(nil), "vaccichain.GenesisBlockResponse")
	proto.RegisterType((*LatestBlockRequest)(nil), "vaccichain.LatestBlockRequest")
	proto.RegisterType((*LatestBlockResponse)(nil), "vaccichain.LatestBlockResponse")
	proto.RegisterType((*BlockCountRequest)(nil), "vaccichain.BlockCountRequest")
	proto.RegisterType((*BlockCountResponse)(nil), "vaccichain.BlockCountResponse")
	proto.RegisterType((*NewBlockRequest)(nil), "vaccichain.NewBlockRequest")
	proto.RegisterType((*NewBlockResponse)(nil), "vaccichain.NewBlockResponse")
	proto.RegisterType((*BlockRequest)(nil), "vaccichain.BlockRequest")
	proto.RegisterType((*BlockResponse)(nil), "vaccichain.BlockResponse")
	proto.RegisterType((*BlockRangeRequest)(nil), "vaccichain.BlockRangeRequest")
	proto.RegisterType((*BlockRangeResponse)(nil), "vaccichain.BlockRangeResponse")
	proto.RegisterType((*BlockMessage)(nil), "vaccichain.BlockMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockchainServiceClient is the client API for BlockchainService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockchainServiceClient interface {
	GetBlocks(ctx context.Context, in *BlocksRequest, opts ...grpc.CallOption) (*BlocksResponse, error)
	GetGenesisBlock(ctx context.Context, in *GenesisBlockRequest, opts ...grpc.CallOption) (*GenesisBlockResponse, error)
	GetLatestBlock(ctx context.Context, in *LatestBlockRequest, opts ...grpc.CallOption) (*LatestBlockResponse, error)
	GetBlockCount(ctx context.Context, in *BlockCountRequest, opts ...grpc.CallOption) (*BlockCountResponse, error)
	AddBlock(ctx context.Context, in *NewBlockRequest, opts ...grpc.CallOption) (*NewBlockResponse, error)
	GetBlock(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockResponse, error)
	GetBlockRange(ctx context.Context, in *BlockRangeRequest, opts ...grpc.CallOption) (*BlockRangeResponse, error)
}

type blockchainServiceClient struct {
	cc *grpc.ClientConn
}

func NewBlockchainServiceClient(cc *grpc.ClientConn) BlockchainServiceClient {
	return &blockchainServiceClient{cc}
}

func (c *blockchainServiceClient) GetBlocks(ctx context.Context, in *BlocksRequest, opts ...grpc.CallOption) (*BlocksResponse, error) {
	out := new(BlocksResponse)
	err := c.cc.Invoke(ctx, "/vaccichain.BlockchainService/GetBlocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainServiceClient) GetGenesisBlock(ctx context.Context, in *GenesisBlockRequest, opts ...grpc.CallOption) (*GenesisBlockResponse, error) {
	out := new(GenesisBlockResponse)
	err := c.cc.Invoke(ctx, "/vaccichain.BlockchainService/GetGenesisBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainServiceClient) GetLatestBlock(ctx context.Context, in *LatestBlockRequest, opts ...grpc.CallOption) (*LatestBlockResponse, error) {
	out := new(LatestBlockResponse)
	err := c.cc.Invoke(ctx, "/vaccichain.BlockchainService/GetLatestBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainServiceClient) GetBlockCount(ctx context.Context, in *BlockCountRequest, opts ...grpc.CallOption) (*BlockCountResponse, error) {
	out := new(BlockCountResponse)
	err := c.cc.Invoke(ctx, "/vaccichain.BlockchainService/GetBlockCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainServiceClient) AddBlock(ctx context.Context, in *NewBlockRequest, opts ...grpc.CallOption) (*NewBlockResponse, error) {
	out := new(NewBlockResponse)
	err := c.cc.Invoke(ctx, "/vaccichain.BlockchainService/AddBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainServiceClient) GetBlock(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockResponse, error) {
	out := new(BlockResponse)
	err := c.cc.Invoke(ctx, "/vaccichain.BlockchainService/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainServiceClient) GetBlockRange(ctx context.Context, in *BlockRangeRequest, opts ...grpc.CallOption) (*BlockRangeResponse, error) {
	out := new(BlockRangeResponse)
	err := c.cc.Invoke(ctx, "/vaccichain.BlockchainService/GetBlockRange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockchainServiceServer is the server API for BlockchainService service.
type BlockchainServiceServer interface {
	GetBlocks(context.Context, *BlocksRequest) (*BlocksResponse, error)
	GetGenesisBlock(context.Context, *GenesisBlockRequest) (*GenesisBlockResponse, error)
	GetLatestBlock(context.Context, *LatestBlockRequest) (*LatestBlockResponse, error)
	GetBlockCount(context.Context, *BlockCountRequest) (*BlockCountResponse, error)
	AddBlock(context.Context, *NewBlockRequest) (*NewBlockResponse, error)
	GetBlock(context.Context, *BlockRequest) (*BlockResponse, error)
	GetBlockRange(context.Context, *BlockRangeRequest) (*BlockRangeResponse, error)
}

func RegisterBlockchainServiceServer(s *grpc.Server, srv BlockchainServiceServer) {
	s.RegisterService(&_BlockchainService_serviceDesc, srv)
}

func _BlockchainService_GetBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServiceServer).GetBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vaccichain.BlockchainService/GetBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServiceServer).GetBlocks(ctx, req.(*BlocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainService_GetGenesisBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenesisBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServiceServer).GetGenesisBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vaccichain.BlockchainService/GetGenesisBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServiceServer).GetGenesisBlock(ctx, req.(*GenesisBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainService_GetLatestBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LatestBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServiceServer).GetLatestBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vaccichain.BlockchainService/GetLatestBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServiceServer).GetLatestBlock(ctx, req.(*LatestBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainService_GetBlockCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServiceServer).GetBlockCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vaccichain.BlockchainService/GetBlockCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServiceServer).GetBlockCount(ctx, req.(*BlockCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainService_AddBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServiceServer).AddBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vaccichain.BlockchainService/AddBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServiceServer).AddBlock(ctx, req.(*NewBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainService_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServiceServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vaccichain.BlockchainService/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServiceServer).GetBlock(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainService_GetBlockRange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServiceServer).GetBlockRange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vaccichain.BlockchainService/GetBlockRange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServiceServer).GetBlockRange(ctx, req.(*BlockRangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockchainService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vaccichain.BlockchainService",
	HandlerType: (*BlockchainServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBlocks",
			Handler:    _BlockchainService_GetBlocks_Handler,
		},
		{
			MethodName: "GetGenesisBlock",
			Handler:    _BlockchainService_GetGenesisBlock_Handler,
		},
		{
			MethodName: "GetLatestBlock",
			Handler:    _BlockchainService_GetLatestBlock_Handler,
		},
		{
			MethodName: "GetBlockCount",
			Handler:    _BlockchainService_GetBlockCount_Handler,
		},
		{
			MethodName: "AddBlock",
			Handler:    _BlockchainService_AddBlock_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _BlockchainService_GetBlock_Handler,
		},
		{
			MethodName: "GetBlockRange",
			Handler:    _BlockchainService_GetBlockRange_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vaccichain.proto",
}

func init() { proto.RegisterFile("vaccichain.proto", fileDescriptor_vaccichain_b259549167e87cea) }

var fileDescriptor_vaccichain_b259549167e87cea = []byte{
	// 579 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x55, 0xb6, 0xb6, 0xb4, 0x77, 0xed, 0x5a, 0xdc, 0x22, 0x65, 0x61, 0x74, 0x95, 0xc5, 0xc3,
	0xc4, 0x43, 0x85, 0xc6, 0x9e, 0x10, 0xd2, 0x44, 0x11, 0x14, 0xa4, 0x31, 0x69, 0x61, 0x3f, 0xe0,
	0x26, 0x77, 0x6d, 0xa0, 0x73, 0x4a, 0xed, 0x16, 0xf8, 0x23, 0x3e, 0x82, 0x8f, 0x43, 0x71, 0xec,
	0xc4, 0x21, 0x29, 0x43, 0xbc, 0xd9, 0xe7, 0xde, 0x9c, 0x73, 0xcf, 0xb5, 0x7d, 0x03, 0xbd, 0x2d,
	0x0b, 0x82, 0x28, 0x58, 0xb0, 0x88, 0x8f, 0x57, 0xeb, 0x58, 0xc6, 0x04, 0x72, 0x84, 0x76, 0xa1,
	0x33, 0x59, 0xc6, 0xc1, 0x17, 0xe1, 0xe3, 0xd7, 0x0d, 0x0a, 0x49, 0x27, 0x70, 0x68, 0x00, 0xb1,
	0x8a, 0xb9, 0x40, 0xf2, 0x1c, 0x1a, 0x33, 0x85, 0xb8, 0xce, 0x68, 0xff, 0xf4, 0xe0, 0xcc, 0x1d,
	0x5b, 0x8c, 0x2a, 0xf7, 0x23, 0x0a, 0xc1, 0xe6, 0xe8, 0xeb, 0x3c, 0xfa, 0x08, 0xfa, 0x53, 0xe4,
	0x28, 0x22, 0xa1, 0xc2, 0x86, 0xfa, 0x06, 0x06, 0x45, 0x58, 0x0b, 0xbc, 0x82, 0xf6, 0xdc, 0xc2,
	0x5d, 0x67, 0xe4, 0xfc, 0x55, 0xa6, 0x90, 0x4d, 0x07, 0x40, 0x2e, 0x99, 0x44, 0x21, 0x0b, 0x5a,
	0xd7, 0xd0, 0x2f, 0xa0, 0x5a, 0xea, 0x25, 0x1c, 0x2c, 0x73, 0xf8, 0x5e, 0x25, 0x3b, 0x99, 0xf6,
	0xe1, 0xa1, 0x5a, 0xbc, 0x89, 0x37, 0x5c, 0x1a, 0x9d, 0x73, 0x20, 0x36, 0xa8, 0x65, 0x86, 0x00,
	0xb3, 0x0c, 0x55, 0x2a, 0x75, 0xdf, 0x42, 0xe8, 0x14, 0xba, 0x57, 0xf8, 0xcd, 0x2e, 0x98, 0x9c,
	0x43, 0x93, 0x6b, 0xe8, 0xde, 0xb2, 0xb2, 0x4c, 0xea, 0x43, 0x2f, 0x27, 0xd2, 0xe2, 0x1e, 0x34,
	0x59, 0x10, 0xe0, 0x4a, 0x62, 0xa8, 0x98, 0x9a, 0x7e, 0xb6, 0x27, 0x14, 0xda, 0x6b, 0xfc, 0x8c,
	0x81, 0xf4, 0x91, 0x89, 0x98, 0xbb, 0x7b, 0x23, 0xe7, 0xb4, 0xe5, 0x17, 0x30, 0x7a, 0x09, 0xed,
	0x42, 0x65, 0xc6, 0xcc, 0x07, 0x1e, 0xe2, 0xf7, 0x82, 0x19, 0x85, 0x90, 0x63, 0x68, 0xa9, 0xdd,
	0x7b, 0x26, 0x16, 0x9a, 0x30, 0x07, 0xe8, 0x85, 0xbe, 0x60, 0x59, 0x79, 0x63, 0xa8, 0xcf, 0xfe,
	0xc9, 0x65, 0x9a, 0x46, 0x51, 0xb7, 0xdd, 0x67, 0x7c, 0x8e, 0xa6, 0xa6, 0x67, 0xd0, 0xb3, 0x2f,
	0x81, 0x92, 0x76, 0x94, 0x74, 0x09, 0x27, 0x4f, 0xa1, 0x23, 0x24, 0x5b, 0xcb, 0x88, 0xcf, 0x53,
	0x0b, 0x7b, 0xca, 0x42, 0x11, 0xa4, 0xef, 0xf4, 0x41, 0x6a, 0x99, 0xff, 0xbe, 0xfb, 0xbf, 0x1c,
	0xdd, 0x3e, 0x1d, 0x20, 0x03, 0xa8, 0x47, 0x56, 0xe7, 0xd2, 0x4d, 0xd2, 0x34, 0x19, 0xdd, 0xa1,
	0x90, 0xec, 0x6e, 0x65, 0x9a, 0x96, 0x01, 0x84, 0x40, 0x2d, 0x64, 0x92, 0xb9, 0xfb, 0x2a, 0xa0,
	0xd6, 0x09, 0xb6, 0x48, 0x6c, 0xd6, 0x52, 0x2c, 0x59, 0x27, 0x47, 0xbd, 0x5a, 0xe3, 0x56, 0xd9,
	0xaf, 0x2b, 0x3c, 0xdb, 0x27, 0xc7, 0x16, 0x46, 0xb7, 0xb7, 0x51, 0xb0, 0x59, 0xca, 0x1f, 0x6e,
	0x23, 0x3d, 0xb6, 0x1c, 0x49, 0xea, 0xe2, 0x31, 0x0f, 0xd0, 0x7d, 0xa0, 0x3e, 0x4c, 0x37, 0x67,
	0x3f, 0x6b, 0xba, 0xdd, 0xca, 0xe2, 0x27, 0x5c, 0x6f, 0xa3, 0x00, 0xc9, 0x04, 0x5a, 0x53, 0x4c,
	0x9f, 0x81, 0x20, 0x47, 0xa5, 0x1e, 0x98, 0xe1, 0xe1, 0x79, 0x55, 0x21, 0xdd, 0xca, 0x1b, 0xe8,
	0x4e, 0x51, 0xda, 0x03, 0x80, 0x9c, 0xd8, 0xe9, 0x15, 0x13, 0xc3, 0x1b, 0xed, 0x4e, 0xd0, 0xac,
	0xd7, 0x70, 0x38, 0x45, 0x69, 0x3d, 0x75, 0x32, 0xb4, 0xbf, 0x29, 0x4f, 0x06, 0xef, 0x64, 0x67,
	0x5c, 0x53, 0x5e, 0x41, 0xc7, 0x98, 0x55, 0xaf, 0x95, 0x3c, 0x29, 0xb9, 0xb2, 0x47, 0x80, 0x37,
	0xdc, 0x15, 0xd6, 0x7c, 0x6f, 0xa1, 0xf9, 0x3a, 0x0c, 0xd3, 0xe2, 0x1e, 0xdb, 0xb9, 0x7f, 0x8c,
	0x00, 0xef, 0xb8, 0x3a, 0xa8, 0x69, 0x2e, 0xa0, 0x69, 0xca, 0x22, 0xe5, 0x6b, 0x68, 0x38, 0x8e,
	0x2a, 0x22, 0x65, 0x5f, 0xea, 0x92, 0x57, 0xf8, 0xb2, 0xdf, 0x58, 0x85, 0xaf, 0xc2, 0xdb, 0x98,
	0x35, 0xd4, 0xdf, 0xe4, 0xc5, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x40, 0x33, 0x1a, 0xab, 0x61,
	0x06, 0x00, 0x00,
}
